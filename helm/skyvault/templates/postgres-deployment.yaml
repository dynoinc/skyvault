{{- if .Values.database.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "skyvault.fullname" . }}-postgres
  labels:
    {{- include "skyvault.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "skyvault.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "skyvault.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: postgres
          image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}"
          imagePullPolicy: {{ .Values.database.image.pullPolicy | default .Values.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: "postgres"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
          resources:
            {{- toYaml .Values.database.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.database.persistence.enabled }}
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.database.persistence.enabled }}
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ include "skyvault.fullname" . }}-postgres
        {{- end }}
{{- end }} 