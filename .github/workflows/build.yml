name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true # Enable Go module caching

      - name: Go Mod Download & Verify
        run: |
          go mod download
          go mod verify

      - name: Code Generation
        run: |
          go generate ./... && git diff --exit-code
          go tool sqlc generate --no-remote -f ./internal/database/sqlc.yaml && git diff --exit-code
          go tool buf generate --template proto/buf.gen.yaml && git diff --exit-code

      - name: Code Quality Checks
        run: |
          go fmt ./... && git diff --exit-code
          go mod tidy && git diff --exit-code
          go vet ./...
          go tool staticcheck ./...
          go tool govulncheck ./...

      - name: Build & Test
        run: |
          go build -v ./...
          go test -v -count=1 -race -shuffle=on ./...

  helm:
    name: Helm Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Lint Helm Chart
        run: helm lint helm/skyvault

      - name: Validate Chart Templates
        run: helm template helm/skyvault > /dev/null

  scan:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      packages: read
      security-events: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: docker build -t ratchet:latest .

      - name: Scan Docker Image with Trivy
        id: trivy_scan
        uses: aquasecurity/trivy-action@0.29.0
        with:
          image-ref: ratchet:latest
          format: "sarif"
          output: trivy-results.sarif
          exit-code: "1"
          ignore-unfixed: true
        continue-on-error: true

      - name: Upload SARIF Report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      - name: Fail if vulnerabilities found
        if: steps.trivy_scan.outcome == 'failure'
        run: exit 1
